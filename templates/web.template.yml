env:
  RAILS_ENV: 'production'
  RACK_ENV: 'production'
  DB_SOCKET: /var/run/postgresql
  DB_NAME: intercity
  SECRET_KEY_BASE: "secret_key_base"
  HOSTNAME: "intercity.example.com"
params:
  home: /var/www/intercity
  upload_size: 10m

run:
  - exec: /usr/local/bin/ruby -e 'if ENV["HOSTNAME"] == "intercity.example.com"; puts "Aborting! Domain is not configured!"; exit 1; end'
  - exec: /usr/local/bin/ruby -e 'if ENV["SECRET_KEY_BASE"] == "secret_key_base"; puts "Aborting! Secret key base is not configured!"; exit 1; end'
  - file:
      path: /etc/runit/1.d/ensure-web-nginx-read
      chmod: "+x"
      contents: |
        #!/bin/bash
        chgrp -R www-data /var/log/nginx
        chgrp www-data /var/log/nginx

  - file:
     path: /etc/service/puma/run
     chmod: "+x"
     contents: |
        #!/bin/bash
        exec 2>&1
        # redis
        # postgres
        # sidekiq
        cd $home
        chown -R intercity:www-data /shared/log/rails
        HOME=/home/intercity USER=intercity exec chpst -u intercity:www-data -U intercity:www-data bundle exec puma -C config/puma.rb

  - file:
     path: /etc/service/nginx/run
     chmod: "+x"
     contents: |
        #!/bin/sh
        exec 2>&1
        mkdir -p /var/log/nginx
        exec /usr/sbin/nginx

  - file:
     path: /etc/runit/3.d/01-nginx
     chmod: "+x"
     contents: |
       #!/bin/bash
       sv stop nginx

  - file:
     path: /etc/runit/3.d/02-puma
     chmod: "+x"
     contents: |
       #!/bin/bash
       sv stop puma

  - exec:
      cd: $home
      hook: code
      cmd:
        - git reset --hard
        - git clean -f
        - git remote set-branches --add origin master
        - git pull
        - git fetch origin $version
        - git checkout $version
        - mkdir -p tmp/pids
        - mkdir -p tmp/sockets
        - touch tmp/.gitkeep
        - mkdir -p                    /shared/log/rails
        - bash -c "touch -a           /shared/log/rails/{production,production_errors,puma.stdout,puma.stderr}.log"
        - bash -c "ln    -s           /shared/log/rails/{production,production_errors,puma.stdout,puma.stderr}.log $home/log"
        - bash -c "mkdir -p           /shared/{uploads,backups}"
        - bash -c "ln    -s           /shared/{uploads,backups} $home/public"
        - chown -R intercity:www-data /shared/log/rails /shared/uploads /shared/backups

  - exec:
      cmd:
        - "cp $home/config/nginx.sample.conf /etc/nginx/conf.d/intercity.conf"
        - "rm /etc/nginx/sites-enabled/default"
        - "mkdir -p /var/nginx/cache"

  - replace:
      filename: /etc/nginx/nginx.conf
      from: pid /run/nginx.pid;
      to: daemon off;

  - replace:
      filename: "/etc/nginx/conf.d/intercity.conf"
      from: /upstream[^\}]+\}/m
      to: "upstream intercity {
        server 127.0.0.1:3000;
      }"

  - replace:
      filename: "/etc/nginx/conf.d/intercity.conf"
      from: /server_name.+$/
      to: server_name _ ;

  - replace:
      filename: "/etc/nginx/conf.d/intercity.conf"
      from: /client_max_body_size.+$/
      to: client_max_body_size $upload_size ;

  - exec:
      cmd: echo "done configuring web"
      hook: web_config

  - exec:
      cd: $home
      hook: web
      cmd:
        # ensure we are on latest bundler
        - gem update bundler
        - chown -R intercity $home

  - exec:
      cd: $home
      hook: bundle_exec
      cmd:
        - su intercity -c 'bundle install --deployment --verbose --without test --without development'
        - su intercity -c 'gem install backup'
        - su intercity -c 'bundle exec rake db:migrate'
        - su intercity -c 'bundle exec rake assets:precompile'
        - su intercity -c 'bundle exec rake intercity:seed_plugins'

  - file:
     path: /usr/local/bin/rails
     chmod: +x
     contents: |
       #!/bin/bash
       # If they requested a console, load pry instead
       (cd /var/www/intercity && RAILS_ENV=production sudo -H -E -u intercity bundle exec bin/rails "$@")

  - file:
     path: /usr/local/bin/rake
     chmod: +x
     contents: |
       #!/bin/bash
       (cd /var/www/intercity && RAILS_ENV=production sudo -H -E -u intercity bundle exec bin/rake "$@")

  - file:
     path: /etc/update-motd.d/10-web
     chmod: +x
     contents: |
       #!/bin/bash
       echo
       echo Use: rails or rake to execute commands in production
       echo

  - file:
      path: /etc/runit/1.d/00-ensure-links
      chmod: +x
      contents: |
        #!/bin/bash
        if [[ ! -L /var/lib/logrotate ]]; then
          rm -fr /var/lib/logrotate
          mkdir -p /shared/state/logrotate
          ln -s /shared/state/logrotate /var/lib/logrotate
        fi
        if [[ ! -d /shared/log/rails ]]; then
          mkdir -p /shared/log/rails
          chown -R intercity:www-data /shared/log/rails
        fi
        if [[ ! -d /shared/uploads ]]; then
          mkdir -p /shared/uploads
          chown -R intercity:www-data /shared/uploads
        fi
        if [[ ! -d /shared/backups ]]; then
          mkdir -p /shared/backups
          chown -R intercity:www-data /shared/backups
        fi
